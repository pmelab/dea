<?php
/**
 * @file
 * Translation access hook implementations.
 */

use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Session\AccountInterface;

use Drupal\Core\Access\AccessResult;
use Drupal\Core\Entity\ContentEntityInterface;

/**
 * Implements hook_entity_operation().
 * Replace Core's translate operation by the DEA version.
 *
 * @param \Drupal\Core\Entity\EntityInterface $entity
 * @return array
 */
function dea_translations_entity_operation(EntityInterface $entity) {
  $operations = [];
  if ($entity->hasLinkTemplate('drupal:content-translation-overview') &&
    (_dea_translations_translate_access($entity)->isAllowed() || _dea_translations_translate_access($entity)->isNeutral())) {
    $operations['translate_dea'] = [
      'title' => t('Translate'),
      'url' => $entity->urlInfo('drupal:content-translation-overview'),
      'weight' => 50,
    ];
  }
  return $operations;
}

/**
 * Implements hook_entity_operation_alter
 * Remove Core's translate operation
 *
 * @param array $operations
 * @param \Drupal\Core\Entity\EntityInterface $entity
 */
function dea_translations_entity_operation_alter(array &$operations, \Drupal\Core\Entity\EntityInterface $entity) {
  foreach ($operations as $key => $operation) {
    if ($key == "translate") {
      unset($operations[$key]);
    }
  }
}

/**
 * Access callback for dea_translations_entity_operation.
 *
 * As Core falls a bit short here, we will apply the following convention:
 * the translate operation will be allowed for the user if he/she can
 * update the node.
 *
 * @param \Drupal\Core\Entity\EntityInterface $entity
 *   The entity whose translation overview should be displayed.
 *
 * @return \Drupal\Core\Access\AccessResultInterface
 *   The access result.
 */
function _dea_translations_translate_access(EntityInterface $entity) {
  $account = \Drupal::currentUser();
  return \Drupal::getContainer()
    ->get('dea.entity.access')
    ->access($entity, 'update', $account);
}
